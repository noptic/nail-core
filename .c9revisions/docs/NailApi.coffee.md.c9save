{"ts":1379266166917,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n[nail]: https://github.com/noptic/nail\n[npm]: https://github.com/noptic/nail\n[grunt]: http://gruntjs.com/\n[grunt-coffeelint]: https://github.com/vojtajina/grunt-coffeelint\n[grunt-contrib-coffee]: https://github.com/gruntjs/grunt-contrib-coffee\n[grunt-contrib-concat]: https://github.com/gruntjs/grunt-contrib-concat\n[grunt-contrib-nodeunit]: https://github.com/gruntjs/grunt-contrib-nodeunit\n[grunt-istanbul]: https://github.com/taichi/grunt-istanbul\n[grunt-istanbul-coverage]: https://github.com/daniellmb/grunt-istanbul-coverage\n[grunt-jscoverage]: https://github.com/andrewkeig/grunt-jscoverage\n[grunt-mocha-cov]: https://github.com/mmoulton/grunt-mocha-cov\n[grunt-simple-mocha]: https://github.com/yaymukund/grunt-simple-mocha\n[js-yaml]: https://github.com/nodeca/js-yaml\n[mocha]: https://npmjs.org/package/mocha\n[should]: https://github.com/visionmedia/should.js\n[underscore]: http://underscorejs.org\n\n\n[NailApi.modules]: ./NailApi.modules.coffee.md\n[NailApi.to]: ./NailApi.to.coffee.md\n[NailApi.use]: ./NailApi.use.coffee.md\n[NailApi.parent]: ./NailApi.parent.coffee.md\n[NailApi.lib]: ./NailApi.lib.coffee.md\n[NailApi]: ./NailApi.coffee.md\n\nNailApi\n=============\nnail creates classes from structured objects, using a seperate module for every\naspect of the class like properties and methods. The `nail-core` offers an API\nto bundle modules into a new `NailApi`.\n\nThe core itself is a instance of `NailApi`and adds important meta data to the\nconstructor.\n\nDefinitions\n-----------\n\n    should  = require 'should'\n    nail    = require '../coverage/instrument/lib/module.js'\n    _       = require 'underscore'\n    they    = it #more natural language for describing array properties\n\nCreating an API\n---------------\n`nail-core` does not expose the constructor of `NailApi`.\nTo create a new API use [NailApi.use].\n\nStructure\n---------\nThe module exports an instance of `NailApi`.\n\n    describe 'nail-core', ->\n\nThe instance is an object.\n\n      it 'is an object', ->\n        nail.should.be.a 'object'\n\nThe object has 3 properties:\n\nAPIs must be created with the factory method [NailApi.use].\nThe API which creates a new API is considered the\nnew API's [parent][NailApi.parent].\n\n      it 'has a \"parent\" property', ->\n        nail.should.have.property 'parent'\n\nThe array [modules][NailApi.modules] contains all modules this API uses.\n\n      it 'has a \"modules\" property', ->\n        nail.should.have.property 'modules'\n\nThe object [lib][NailApi.lib] containing namespaced classes\ncreated by *all* APIs.\n\n      it 'has a \"lib\" property', ->\n        nail.should.have.property 'lib'\n\nThe object has 2 methods:\n\n[NailApi.use] creates a new API with additional modules.\n\n      it 'has a \"use\" property', ->\n        nail.should.have.property 'use'\n\n[NailApi.to] creates new classes.\n\n      it 'has a \"to\" property', ->\n        nail.should.have.property 'to'"]],"start1":0,"start2":0,"length1":0,"length2":2854}]],"length":2854}
